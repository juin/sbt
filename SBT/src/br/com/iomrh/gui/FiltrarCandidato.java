/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package br.com.iomrh.gui;

import br.com.iomrh.beans.Candidato;
import br.com.iomrh.beans.ExperienciaProfissional;
import br.com.iomrh.beans.IndisponibilidadeCandidato;
import br.com.iomrh.beans.Profissao;
import br.com.iomrh.dao.CandidatoDAO;
import br.com.iomrh.dao.ProfissaoDAO;
import br.com.iomrh.helpers.Util;
import br.com.iomrh.listeners.FiltrarCandidatoListener;
import com.sun.javafx.PlatformUtil;
import java.awt.Color;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Italo Miranda
 */
public class FiltrarCandidato extends javax.swing.JFrame {

    
    /**
     * Creates new form Filtro
     */
    
    //Cria novo Model para adicionar/remover elementos do 2º jList
    DefaultListModel dlm2 = new DefaultListModel();
    FiltrarCandidatoListener listener = new FiltrarCandidatoListener();
    ProfissaoDAO pd = new ProfissaoDAO();
    List<Profissao> profissoes = pd.listarProfissoes();


    public FiltrarCandidato() {
        initComponents();
        //buttonGroup1 está relacionado ao PNE
        buttonGroup1.add(Radio__Candidato__PortadorNecessidadesEspeciais__Sim);
        buttonGroup1.add(Radio__Candidato__PortadorNecessidadesEspeciais__Nao);
        //buttonGroup2 está relacionado ao DisponibilidadeViajar
        buttonGroup2.add(Radio__Candidato__DisponibilidadeViajar__Sim);
        buttonGroup2.add(Radio__Candidato__DisponibilidadeViajar__Nao);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jTPResultado = new javax.swing.JTabbedPane();
        jPDadosPessoais = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        Radio__Candidato__PortadorNecessidadesEspeciais__Nao = new javax.swing.JRadioButton();
        Radio__Candidato__PortadorNecessidadesEspeciais__Sim = new javax.swing.JRadioButton();
        jLabel51 = new javax.swing.JLabel();
        Radio__Candidato__DisponibilidadeViajar__Nao = new javax.swing.JRadioButton();
        Radio__Candidato__DisponibilidadeViajar__Sim = new javax.swing.JRadioButton();
        jLabel52 = new javax.swing.JLabel();
        Combo__Candidato__CNHCategoria = new javax.swing.JComboBox();
        Combo__Candidato__Veiculo = new javax.swing.JComboBox();
        Combo__Candidato__Sexo = new javax.swing.JComboBox();
        Field__Candidato__PretensaoSalarialMin = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        Field__Candidato__PrimeiroEmprego = new javax.swing.JCheckBox();
        Checkbox__Candidato__Gerencia = new javax.swing.JCheckBox();
        jLabel48 = new javax.swing.JLabel();
        Field__Candidato__PreNome = new javax.swing.JTextField();
        Field__Candidato__SobreNome = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Field__Candidato__RG = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        Field__Candidato__CPF = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        Field__Candidato__dataNascimento = new javax.swing.JTextField();
        Combo__Candidato__estadoCivil = new javax.swing.JComboBox();
        jLabel45 = new javax.swing.JLabel();
        Field__Candidato__quantidadeFilhos = new javax.swing.JTextField();
        Field__Candidato__PretensaoSalarialMax = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        ComboBox__ExperienciaProfissional__CargoExercido__Pesquisa_Profissoes = new javax.swing.JComboBox();
        addProfissao = new javax.swing.JButton();
        delProfissao = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        List__Profissao__Nome__Selecionados = new javax.swing.JList();
        jLabel11 = new javax.swing.JLabel();
        jPCaracteristicas = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        Field__CaracteristicasCandidato__CaracteristicasCandidato__Selecionados = new javax.swing.JList();
        addCaracteristica = new javax.swing.JButton();
        delCaracteristica = new javax.swing.JButton();
        Field__CaracteristicasCandidato__CaracteristicasCandidato__Pesquisa = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        List__CaracteristicasCandidato__Nome__Lista = new javax.swing.JList();
        Button__CaracteristicasCandidato__CaracteristicasCandidato__Pesquisa = new javax.swing.JButton();
        jPDisponibilidade = new javax.swing.JPanel();
        Button__IndisponibilidadeCandidato__Comercial__SegSex = new javax.swing.JButton();
        Button__IndisponibilidadeCandidato__MarcarTudo = new javax.swing.JButton();
        Button__IndisponibilidadeCandidato__Limpar = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        Table__IndisponibilidadeCandidato = new javax.swing.JTable();
        jLabel56 = new javax.swing.JLabel();
        Button__IndisponibilidadeCandidato__Semana__Noite = new javax.swing.JButton();
        Button__IndisponibilidadeCandidato__Semana__Tarde = new javax.swing.JButton();
        Button__IndisponibilidadeCandidato__Semana__Manha = new javax.swing.JButton();
        Button__IndisponibilidadeCandidato__Comercial__Sabado = new javax.swing.JButton();
        jPExperienciaProfissional = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        Table__ExperienciaProfissional = new javax.swing.JTable();
        jBtnLimparTabelaExperienciasProfissionais = new javax.swing.JButton();
        Button__ExperienciaProfissional__InserirExperiencia = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        ComboBox__ExperienciaProfissional__CargoExercido__Pesquisa = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        Field__ExperienciaProfissional__Duracao = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Checkbox__ExperienciaProfissional__Gerente = new javax.swing.JCheckBox();
        jPInformaticaIdiomas = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        Table__CurriculoInformatica = new javax.swing.JTable();
        jLabel42 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        Table__CurriculoIdioma = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        Table__ResultadoFiltragem = new javax.swing.JTable();
        Filtrar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setVisible(true);

        jLabel5.setText("Sobrenome");

        Radio__Candidato__PortadorNecessidadesEspeciais__Nao.setText("Não");

        Radio__Candidato__PortadorNecessidadesEspeciais__Sim.setText("Sim");

        jLabel51.setText("PNE");

        Radio__Candidato__DisponibilidadeViajar__Nao.setText("Não");

        Radio__Candidato__DisponibilidadeViajar__Sim.setText("Sim");

        jLabel52.setText("Disp. viajar");

        Combo__Candidato__CNHCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CNH", "Não possui", "A", "B", "C", "D", "E" }));

        Combo__Candidato__Veiculo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Veículo", "Não possui", "Carro", "Moto", "Outro", " " }));

        Combo__Candidato__Sexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Escolha o Sexo", "Masculino", "Feminino" }));

        jLabel55.setText("Pretensão salarial");

        Field__Candidato__PrimeiroEmprego.setText("Primeiro emprego");

        Checkbox__Candidato__Gerencia.setText("Gerência");

        jLabel48.setText("Prenome");

        Field__Candidato__PreNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Field__Candidato__PreNomeActionPerformed(evt);
            }
        });

        jLabel6.setText("RG");

        jLabel49.setText("CPF");

        jLabel50.setText("Data de nascimento");

        Field__Candidato__dataNascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Field__Candidato__dataNascimentoActionPerformed(evt);
            }
        });

        Combo__Candidato__estadoCivil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Estado Civil", "Casado(a)", "Solteiro(a)", "Divorciado(a)", "Viúvo(a)", "Outros" }));

        jLabel45.setText("Qtd. de filhos");

        jLabel7.setText("Mínimo");

        jLabel10.setText("Máximo");

        for(Profissao p : profissoes){
            ComboBox__ExperienciaProfissional__CargoExercido__Pesquisa_Profissoes.addItem(p);
        }

        addProfissao.setText("+");
        addProfissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProfissaoActionPerformed(evt);
            }
        });

        delProfissao.setText("-");
        delProfissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delProfissaoActionPerformed(evt);
            }
        });

        List__Profissao__Nome__Selecionados.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(List__Profissao__Nome__Selecionados);

        jLabel11.setText("Profissões");

        javax.swing.GroupLayout jPDadosPessoaisLayout = new javax.swing.GroupLayout(jPDadosPessoais);
        jPDadosPessoais.setLayout(jPDadosPessoaisLayout);
        jPDadosPessoaisLayout.setHorizontalGroup(
            jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDadosPessoaisLayout.createSequentialGroup()
                .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDadosPessoaisLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel45)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Field__Candidato__quantidadeFilhos))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPDadosPessoaisLayout.createSequentialGroup()
                                .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel49)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Field__Candidato__RG)
                                    .addComponent(Field__Candidato__CPF)
                                    .addComponent(Field__Candidato__SobreNome)))
                            .addGroup(jPDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel50)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Field__Candidato__dataNascimento))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel48)
                                .addGap(37, 37, 37)
                                .addComponent(Field__Candidato__PreNome, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 1, Short.MAX_VALUE)))
                        .addGap(47, 47, 47))
                    .addGroup(jPDadosPessoaisLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel51)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Radio__Candidato__PortadorNecessidadesEspeciais__Sim)
                                .addGap(8, 8, 8)
                                .addComponent(Radio__Candidato__PortadorNecessidadesEspeciais__Nao))
                            .addGroup(jPDadosPessoaisLayout.createSequentialGroup()
                                .addComponent(jLabel52)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Radio__Candidato__DisponibilidadeViajar__Sim)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Radio__Candidato__DisponibilidadeViajar__Nao))
                            .addComponent(Combo__Candidato__estadoCivil, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Combo__Candidato__CNHCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Combo__Candidato__Veiculo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Combo__Candidato__Sexo, 0, 272, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDadosPessoaisLayout.createSequentialGroup()
                        .addComponent(Checkbox__Candidato__Gerencia)
                        .addGap(18, 18, 18)
                        .addComponent(Field__Candidato__PrimeiroEmprego))
                    .addGroup(jPDadosPessoaisLayout.createSequentialGroup()
                        .addComponent(jLabel55)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel7)
                            .addComponent(Field__Candidato__PretensaoSalarialMin, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel10)
                            .addComponent(Field__Candidato__PretensaoSalarialMax, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPDadosPessoaisLayout.createSequentialGroup()
                        .addComponent(ComboBox__ExperienciaProfissional__CargoExercido__Pesquisa_Profissoes, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addProfissao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delProfissao))
                    .addComponent(jLabel11)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(333, 333, 333))
        );
        jPDadosPessoaisLayout.setVerticalGroup(
            jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPDadosPessoaisLayout.createSequentialGroup()
                .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDadosPessoaisLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPDadosPessoaisLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Field__Candidato__PreNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Checkbox__Candidato__Gerencia)
                            .addComponent(Field__Candidato__PrimeiroEmprego))))
                .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDadosPessoaisLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(Field__Candidato__SobreNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Field__Candidato__CPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Field__Candidato__RG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50)
                            .addComponent(Field__Candidato__dataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel45)
                            .addComponent(Field__Candidato__quantidadeFilhos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Combo__Candidato__Sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(Combo__Candidato__estadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(Combo__Candidato__CNHCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Combo__Candidato__Veiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Radio__Candidato__PortadorNecessidadesEspeciais__Nao)
                            .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel51)
                                .addComponent(Radio__Candidato__PortadorNecessidadesEspeciais__Sim)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel52)
                            .addComponent(Radio__Candidato__DisponibilidadeViajar__Sim)
                            .addComponent(Radio__Candidato__DisponibilidadeViajar__Nao))
                        .addContainerGap())
                    .addGroup(jPDadosPessoaisLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel55)
                            .addComponent(Field__Candidato__PretensaoSalarialMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Field__Candidato__PretensaoSalarialMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPDadosPessoaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ComboBox__ExperienciaProfissional__CargoExercido__Pesquisa_Profissoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addProfissao)
                            .addComponent(delProfissao))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jTPResultado.addTab("Dados pessoais", jPDadosPessoais);

        Field__CaracteristicasCandidato__CaracteristicasCandidato__Selecionados.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(Field__CaracteristicasCandidato__CaracteristicasCandidato__Selecionados);

        addCaracteristica.setText("->");

        delCaracteristica.setText("<-");

        Field__CaracteristicasCandidato__CaracteristicasCandidato__Pesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Field__CaracteristicasCandidato__CaracteristicasCandidato__PesquisaActionPerformed(evt);
            }
        });

        jLabel3.setText("Pesquisar");

        List__CaracteristicasCandidato__Nome__Lista.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(List__CaracteristicasCandidato__Nome__Lista);

        Button__CaracteristicasCandidato__CaracteristicasCandidato__Pesquisa.setText("Pesquisar");

        javax.swing.GroupLayout jPCaracteristicasLayout = new javax.swing.GroupLayout(jPCaracteristicas);
        jPCaracteristicas.setLayout(jPCaracteristicasLayout);
        jPCaracteristicasLayout.setHorizontalGroup(
            jPCaracteristicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCaracteristicasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPCaracteristicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Field__CaracteristicasCandidato__CaracteristicasCandidato__Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPCaracteristicasLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(jPCaracteristicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCaracteristica)
                            .addComponent(delCaracteristica))
                        .addGap(18, 18, 18)
                        .addGroup(jPCaracteristicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Button__CaracteristicasCandidato__CaracteristicasCandidato__Pesquisa)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(260, Short.MAX_VALUE))
        );
        jPCaracteristicasLayout.setVerticalGroup(
            jPCaracteristicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCaracteristicasLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPCaracteristicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Field__CaracteristicasCandidato__CaracteristicasCandidato__Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(13, 13, 13)
                .addGroup(jPCaracteristicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPCaracteristicasLayout.createSequentialGroup()
                        .addComponent(addCaracteristica)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delCaracteristica)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPCaracteristicasLayout.createSequentialGroup()
                        .addGroup(jPCaracteristicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane5)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(Button__CaracteristicasCandidato__CaracteristicasCandidato__Pesquisa)
                        .addContainerGap(91, Short.MAX_VALUE))))
        );

        jTPResultado.addTab("Características", jPCaracteristicas);

        Button__IndisponibilidadeCandidato__Comercial__SegSex.setText("Horário Comercial - Seg a Sex");
        Button__IndisponibilidadeCandidato__Comercial__SegSex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button__IndisponibilidadeCandidato__Comercial__SegSexActionPerformed(evt);
            }
        });

        Button__IndisponibilidadeCandidato__MarcarTudo.setText("Marcar tudo");
        Button__IndisponibilidadeCandidato__MarcarTudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button__IndisponibilidadeCandidato__MarcarTudoActionPerformed(evt);
            }
        });

        Button__IndisponibilidadeCandidato__Limpar.setText("Limpar");
        Button__IndisponibilidadeCandidato__Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button__IndisponibilidadeCandidato__LimparActionPerformed(evt);
            }
        });

        Table__IndisponibilidadeCandidato.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Manhã", null, null, null, null, null, null, null},
                {"Tarde", null, null, null, null, null, null, null},
                {"Noite", null, null, null, null, null, null, null}
            },
            new String [] {
                "Dia/turno", "Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(Table__IndisponibilidadeCandidato);

        jLabel56.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel56.setText("Disponibilidade do candidato");

        Button__IndisponibilidadeCandidato__Semana__Noite.setText("Semana - Noite");
        Button__IndisponibilidadeCandidato__Semana__Noite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button__IndisponibilidadeCandidato__Semana__NoiteActionPerformed(evt);
            }
        });

        Button__IndisponibilidadeCandidato__Semana__Tarde.setText("Semana - Tarde");
        Button__IndisponibilidadeCandidato__Semana__Tarde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button__IndisponibilidadeCandidato__Semana__TardeActionPerformed(evt);
            }
        });

        Button__IndisponibilidadeCandidato__Semana__Manha.setText("Semana - Manhã");
        Button__IndisponibilidadeCandidato__Semana__Manha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button__IndisponibilidadeCandidato__Semana__ManhaActionPerformed(evt);
            }
        });

        Button__IndisponibilidadeCandidato__Comercial__Sabado.setText("Horário Comercial");
        Button__IndisponibilidadeCandidato__Comercial__Sabado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button__IndisponibilidadeCandidato__Comercial__SabadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPDisponibilidadeLayout = new javax.swing.GroupLayout(jPDisponibilidade);
        jPDisponibilidade.setLayout(jPDisponibilidadeLayout);
        jPDisponibilidadeLayout.setHorizontalGroup(
            jPDisponibilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDisponibilidadeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPDisponibilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDisponibilidadeLayout.createSequentialGroup()
                        .addGroup(jPDisponibilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPDisponibilidadeLayout.createSequentialGroup()
                                .addComponent(Button__IndisponibilidadeCandidato__Comercial__Sabado, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(85, 85, 85)
                                .addComponent(Button__IndisponibilidadeCandidato__Semana__Manha, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Button__IndisponibilidadeCandidato__Semana__Tarde, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Button__IndisponibilidadeCandidato__Semana__Noite))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 901, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPDisponibilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Button__IndisponibilidadeCandidato__MarcarTudo)
                            .addComponent(Button__IndisponibilidadeCandidato__Limpar)))
                    .addGroup(jPDisponibilidadeLayout.createSequentialGroup()
                        .addGroup(jPDisponibilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel56)
                            .addComponent(Button__IndisponibilidadeCandidato__Comercial__SegSex))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPDisponibilidadeLayout.setVerticalGroup(
            jPDisponibilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDisponibilidadeLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel56)
                .addGap(18, 18, 18)
                .addGroup(jPDisponibilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPDisponibilidadeLayout.createSequentialGroup()
                        .addComponent(Button__IndisponibilidadeCandidato__MarcarTudo)
                        .addGap(18, 18, 18)
                        .addComponent(Button__IndisponibilidadeCandidato__Limpar)))
                .addGap(18, 18, 18)
                .addGroup(jPDisponibilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDisponibilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Button__IndisponibilidadeCandidato__Semana__Manha)
                        .addComponent(Button__IndisponibilidadeCandidato__Semana__Tarde)
                        .addComponent(Button__IndisponibilidadeCandidato__Semana__Noite))
                    .addComponent(Button__IndisponibilidadeCandidato__Comercial__Sabado))
                .addGap(26, 26, 26)
                .addComponent(Button__IndisponibilidadeCandidato__Comercial__SegSex)
                .addContainerGap(203, Short.MAX_VALUE))
        );

        jTPResultado.addTab("Disponiblidade do candidato", jPDisponibilidade);

        Table__ExperienciaProfissional.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cargo", "Duração", "Gerente"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(Table__ExperienciaProfissional);
        if (Table__ExperienciaProfissional.getColumnModel().getColumnCount() > 0) {
            Table__ExperienciaProfissional.getColumnModel().getColumn(1).setPreferredWidth(8);
            Table__ExperienciaProfissional.getColumnModel().getColumn(2).setResizable(false);
            Table__ExperienciaProfissional.getColumnModel().getColumn(2).setPreferredWidth(2);
        }

        jBtnLimparTabelaExperienciasProfissionais.setText("Limpar Tabela");
        jBtnLimparTabelaExperienciasProfissionais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLimparTabelaExperienciasProfissionaisActionPerformed(evt);
            }
        });

        Button__ExperienciaProfissional__InserirExperiencia.setText("Inserir experiência");
        Button__ExperienciaProfissional__InserirExperiencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button__ExperienciaProfissional__InserirExperienciaActionPerformed(evt);
            }
        });

        jLabel8.setText("Cargo");

        for(Profissao p : profissoes){
            ComboBox__ExperienciaProfissional__CargoExercido__Pesquisa.addItem(p);
        }

        jLabel9.setText("Duração");

        jLabel4.setText("Gerente?");

        javax.swing.GroupLayout jPExperienciaProfissionalLayout = new javax.swing.GroupLayout(jPExperienciaProfissional);
        jPExperienciaProfissional.setLayout(jPExperienciaProfissionalLayout);
        jPExperienciaProfissionalLayout.setHorizontalGroup(
            jPExperienciaProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPExperienciaProfissionalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPExperienciaProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPExperienciaProfissionalLayout.createSequentialGroup()
                        .addGroup(jPExperienciaProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPExperienciaProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboBox__ExperienciaProfissional__CargoExercido__Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Field__ExperienciaProfissional__Duracao, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Checkbox__ExperienciaProfissional__Gerente)))
                    .addGroup(jPExperienciaProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPExperienciaProfissionalLayout.createSequentialGroup()
                            .addComponent(Button__ExperienciaProfissional__InserirExperiencia)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtnLimparTabelaExperienciasProfissionais))
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(267, Short.MAX_VALUE))
        );
        jPExperienciaProfissionalLayout.setVerticalGroup(
            jPExperienciaProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPExperienciaProfissionalLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPExperienciaProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPExperienciaProfissionalLayout.createSequentialGroup()
                        .addComponent(ComboBox__ExperienciaProfissional__CargoExercido__Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Field__ExperienciaProfissional__Duracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPExperienciaProfissionalLayout.createSequentialGroup()
                        .addGroup(jPExperienciaProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPExperienciaProfissionalLayout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel9)))
                        .addGap(18, 18, 18)
                        .addGroup(jPExperienciaProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Checkbox__ExperienciaProfissional__Gerente))))
                .addGap(18, 18, 18)
                .addGroup(jPExperienciaProfissionalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Button__ExperienciaProfissional__InserirExperiencia)
                    .addComponent(jBtnLimparTabelaExperienciasProfissionais))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        jTPResultado.addTab("Experiência profissional", jPExperienciaProfissional);

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel41.setText("Informática");

        Table__CurriculoInformatica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Habilidade", "Nível", "Marcar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane9.setViewportView(Table__CurriculoInformatica);
        if (Table__CurriculoInformatica.getColumnModel().getColumnCount() > 0) {
            Table__CurriculoInformatica.getColumnModel().getColumn(2).setResizable(false);
            Table__CurriculoInformatica.getColumnModel().getColumn(2).setPreferredWidth(4);
        }

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel42.setText("Idiomas");

        Table__CurriculoIdioma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Nível fala", "Nível Escrita", "Nível Leitura", "Marcar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane7.setViewportView(Table__CurriculoIdioma);
        if (Table__CurriculoIdioma.getColumnModel().getColumnCount() > 0) {
            Table__CurriculoIdioma.getColumnModel().getColumn(4).setResizable(false);
            Table__CurriculoIdioma.getColumnModel().getColumn(4).setPreferredWidth(5);
        }

        javax.swing.GroupLayout jPInformaticaIdiomasLayout = new javax.swing.GroupLayout(jPInformaticaIdiomas);
        jPInformaticaIdiomas.setLayout(jPInformaticaIdiomasLayout);
        jPInformaticaIdiomasLayout.setHorizontalGroup(
            jPInformaticaIdiomasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInformaticaIdiomasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPInformaticaIdiomasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel41)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPInformaticaIdiomasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42))
                .addGap(22, 22, 22))
        );
        jPInformaticaIdiomasLayout.setVerticalGroup(
            jPInformaticaIdiomasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInformaticaIdiomasLayout.createSequentialGroup()
                .addGroup(jPInformaticaIdiomasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPInformaticaIdiomasLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPInformaticaIdiomasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel42)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPInformaticaIdiomasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTPResultado.addTab("Informática/Idiomas", jPInformaticaIdiomas);

        Table__ResultadoFiltragem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "CPF", "Nome Completo", "E-mail", "Telefone", "Selecionar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table__ResultadoFiltragem.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(Table__ResultadoFiltragem);
        if (Table__ResultadoFiltragem.getColumnModel().getColumnCount() > 0) {
            Table__ResultadoFiltragem.getColumnModel().getColumn(0).setResizable(false);
            Table__ResultadoFiltragem.getColumnModel().getColumn(0).setPreferredWidth(3);
            Table__ResultadoFiltragem.getColumnModel().getColumn(1).setResizable(false);
            Table__ResultadoFiltragem.getColumnModel().getColumn(1).setPreferredWidth(12);
            Table__ResultadoFiltragem.getColumnModel().getColumn(2).setResizable(false);
            Table__ResultadoFiltragem.getColumnModel().getColumn(2).setPreferredWidth(55);
            Table__ResultadoFiltragem.getColumnModel().getColumn(3).setResizable(false);
            Table__ResultadoFiltragem.getColumnModel().getColumn(3).setPreferredWidth(15);
            Table__ResultadoFiltragem.getColumnModel().getColumn(4).setResizable(false);
            Table__ResultadoFiltragem.getColumnModel().getColumn(4).setPreferredWidth(10);
            Table__ResultadoFiltragem.getColumnModel().getColumn(5).setResizable(false);
            Table__ResultadoFiltragem.getColumnModel().getColumn(5).setPreferredWidth(5);
        }

        jTPResultado.addTab("Resultado Filtragem", jScrollPane3);

        Filtrar.setText("Filtrar");
        Filtrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltrarActionPerformed(evt);
            }
        });

        jButton4.setText("Desfazer todos os filtros");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Filtrar candidatos por:");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTPResultado))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jButton4)
                                .addGap(30, 30, 30)
                                .addComponent(Filtrar)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTPResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(Filtrar))
                .addContainerGap(91, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jInternalFrame1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void FiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltrarActionPerformed
        
        //Dados Pessoais
        //Busca todos os candidatos que possuem um dos campos acima
        List<Candidato> candidatosPorDadosPessoais = new ArrayList<Candidato>();
        CandidatoDAO candidadoProfissoesDao = new CandidatoDAO();
        if(!Field__Candidato__PreNome.getText().isEmpty() || !Field__Candidato__SobreNome.getText().isEmpty() || 
                !Field__Candidato__CPF.getText().isEmpty() || !Field__Candidato__RG.getText().isEmpty() || 
                !Field__Candidato__dataNascimento.getText().isEmpty() || !Field__Candidato__quantidadeFilhos.getText().isEmpty() ||  
                !Combo__Candidato__Sexo.getSelectedItem().equals("Escolha o Sexo") || !Combo__Candidato__estadoCivil.getSelectedItem().equals("Estado Civil") ||
                !Combo__Candidato__CNHCategoria.getSelectedItem().equals("CNH") || 
                !Combo__Candidato__Veiculo.getSelectedItem().equals("Veículo") || Radio__Candidato__PortadorNecessidadesEspeciais__Sim.isSelected() || 
                Radio__Candidato__PortadorNecessidadesEspeciais__Nao.isSelected() || Radio__Candidato__DisponibilidadeViajar__Sim.isSelected() || 
                Radio__Candidato__DisponibilidadeViajar__Nao.isSelected() || Checkbox__Candidato__Gerencia.isSelected() || Field__Candidato__PrimeiroEmprego.isSelected() || 
                !Field__Candidato__PretensaoSalarialMin.getText().isEmpty() || !Field__Candidato__PretensaoSalarialMax.getText().isEmpty() || 
                (List__Profissao__Nome__Selecionados.getModel().getSize()>0)
            ){
                Candidato canTemp = new Candidato();
                canTemp.setCodProfissao(0);
                canTemp.setPrenome(Field__Candidato__PreNome.getText());
                canTemp.setSobrenome(Field__Candidato__SobreNome.getText());
                canTemp.setCpf(Field__Candidato__CPF.getText());
                canTemp.setRg(Field__Candidato__RG.getText());
                canTemp.setSexo((String) Combo__Candidato__Sexo.getSelectedItem());
                String dataNascimento = Field__Candidato__dataNascimento.getText();
                if(!dataNascimento.isEmpty()){
                    Util dnTemp = new Util();
                    Date dataNasc = new Date();
                    try {
                        canTemp.setDataNascimento(dnTemp.criaData(dataNascimento));
                    } catch (ParseException ex) {
                        Logger.getLogger(FiltrarCandidato.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                candidatosPorDadosPessoais.addAll(candidadoProfissoesDao.buscaCandidatoPorDadosPessoais(canTemp));
                
                //Pega tamanho da lista de profissões selecionadas pelo usuário
                int tamanhoLista = List__Profissao__Nome__Selecionados.getModel().getSize();
                //Efetua busca por cada código de profissão selecionado pelo usuário.
                for (int i=0; i < tamanhoLista; i++){
                    Profissao p = new Profissao();
                    p = (Profissao)List__Profissao__Nome__Selecionados.getModel().getElementAt(i);
                    canTemp.setCodProfissao(p.getCodigoProfissao());
                    candidatosPorDadosPessoais.addAll(candidadoProfissoesDao.buscaCandidatoPorDadosPessoais(canTemp));
                }
                
            
        }
              
        
        //ExperienciasProfissionais
        //Pega tamanho da lista de Experiências profissionais selecionadas pelo usuário
        int tamanhoListaExperienciaProfissional = Table__ExperienciaProfissional.getRowCount();
        //Cria arrayList de Experiências profissionais selecionadas pelo usuário
        List<ExperienciaProfissional> experienciasProfissionais = new ArrayList<>();
        //Adiciona as Experiências profissionais selecionadas pelo usuário
        for (int i=0; i < tamanhoListaExperienciaProfissional; i++){
            ExperienciaProfissional expProTemp = new ExperienciaProfissional();
            Profissao temp = (Profissao) Table__ExperienciaProfissional.getValueAt(i, 0);
            expProTemp.setCodigoProfissao(temp.getCodigoProfissao());
            expProTemp.setDuracao((Integer) Table__ExperienciaProfissional.getValueAt(i, 1));
            expProTemp.setGerencia((String) Table__ExperienciaProfissional.getValueAt(i, 2));
            experienciasProfissionais.add(expProTemp);
        }
        //Busca todos os candidatos que possuem uma das profissões acima
        List<Candidato> candidatosPorExperienciaProfissional = new ArrayList<>();     
        CandidatoDAO candidadoDaoExpPro = new CandidatoDAO();
        if(!experienciasProfissionais.isEmpty()){
            for(ExperienciaProfissional expPro : experienciasProfissionais){
                Candidato canTemp = new Candidato();
                canTemp.addExperienciaProfissionalList(expPro);
                canTemp.setGerencia(expPro.getGerencia());
                candidatosPorExperienciaProfissional.addAll(candidadoDaoExpPro.buscaCandidatoPorExperienciasProfissionais(canTemp));
            }
        }
        
        
        //Indisponibilidade Candidato        
        //Cria arrayList de Experiências profissionais selecionadas pelo usuário
        List<IndisponibilidadeCandidato> indisponibilidades = new ArrayList<>();
        Object objColuna = new Object();
        //Adiciona os dias que o Candidato deve ter disponiveis, selecionadas pelo usuário
        for (int l=0; l < 3; l++){            
            for(int c=1;c<=7;c++){
                objColuna = Table__IndisponibilidadeCandidato.getValueAt(l, c);
                if(objColuna instanceof Boolean){
                    boolean tableTurnoDia = (boolean) objColuna;
                    if(tableTurnoDia){
                        IndisponibilidadeCandidato dispTemp = new IndisponibilidadeCandidato();
                        switch (l){
                            case 0:
                                dispTemp.setTurno("Matutino");
                                break;
                            case 1:
                                dispTemp.setTurno("Vespertino");
                                break;
                            case 2:
                                dispTemp.setTurno("Noturno");
                                break;
                        }
                        switch (c){
                            case 1:
                                dispTemp.setDia("Domingo");
                                break;
                            case 2:
                                dispTemp.setDia("Segunda-feira");
                                break;
                            case 3:
                                dispTemp.setDia("Terça-feira");
                                break;
                            case 4:
                                dispTemp.setDia("Quarta-feira");
                                break;
                            case 5:
                                dispTemp.setDia("Quinta-feira");
                                break;
                            case 6:
                                dispTemp.setDia("Sexta-feira");
                                break;
                            case 7:
                                dispTemp.setDia("Sábado");
                                break;                        
                        }
                        indisponibilidades.add(dispTemp);
                    }
                }
            }
        }
          
        //Busca todos os candidatos que possuem uma das profissões acima
        List<Candidato> candidatosPorIndisponibilidade = new ArrayList<>();     
        CandidatoDAO candidadoDaoIndisponibilidade = new CandidatoDAO();
        if(!indisponibilidades.isEmpty()){
            for(IndisponibilidadeCandidato ind : indisponibilidades){
                Candidato canTemp = new Candidato();
                canTemp.addIndisponibilidadeCandidatoList(ind);
                candidatosPorIndisponibilidade.addAll(candidadoDaoIndisponibilidade.buscaCandidatoPorIndisponibilidade(canTemp));
            }
        }
        
        //Tratar os arrays com os resultados das buscas
        List<Candidato> candidatosFiltrados = new ArrayList<>();
        List<Candidato> candidatosResultadoFiltragem = new ArrayList<>();
        if(!candidatosPorDadosPessoais.isEmpty()){
            
            candidatosFiltrados.addAll(candidatosPorDadosPessoais);
        }
        if(!candidatosPorExperienciaProfissional.isEmpty()){
            candidatosFiltrados.addAll(candidatosPorExperienciaProfissional);
        }
        if(!candidatosPorIndisponibilidade.isEmpty()){
            candidatosFiltrados.addAll(candidatosPorIndisponibilidade);
            candidatosResultadoFiltragem.addAll(candidatosFiltrados);
                for(Candidato c : candidatosFiltrados){
                    for(Candidato ca : candidatosPorIndisponibilidade){
                        if(c.compareTo(ca) == 1){
                            candidatosResultadoFiltragem.remove(ca);
                        }
                    }
                }
                       
        }
        
        //Cria objeto do tipo DefaultTableModel e exibe resultado do filtro
        javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) Table__ResultadoFiltragem.getModel();
        dtm.getDataVector().removeAllElements();
        for(Candidato c : candidatosResultadoFiltragem){
                dtm.addRow(new Object[]{c.getCodigoCandidato(), c.getCpf(), c.getPrenome()+" "+c.getSobrenome(), c.getEmail(), "7788398284",false});
        }
        
       jTPResultado.setSelectedIndex(5);
      
    }//GEN-LAST:event_FiltrarActionPerformed

    private void jBtnLimparTabelaExperienciasProfissionaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLimparTabelaExperienciasProfissionaisActionPerformed
        DefaultTableModel dmExpProf = (DefaultTableModel) Table__ExperienciaProfissional.getModel();
        int linhasExpProf = dmExpProf.getRowCount();
        //Remove todas aslinhas
        for (int i = linhasExpProf - 1; i >= 0; i--) {
            dmExpProf.removeRow(i);
        }
    }//GEN-LAST:event_jBtnLimparTabelaExperienciasProfissionaisActionPerformed

    private void Button__ExperienciaProfissional__InserirExperienciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button__ExperienciaProfissional__InserirExperienciaActionPerformed
        ExperienciaProfissional expTemp = new ExperienciaProfissional();
        Profissao cargo = (Profissao) ComboBox__ExperienciaProfissional__CargoExercido__Pesquisa.getSelectedItem();
        expTemp.setCodigoProfissao(cargo.getCodigoProfissao());

        if(!Field__ExperienciaProfissional__Duracao.getText().isEmpty()){
            int duracao = Integer.parseInt(Field__ExperienciaProfissional__Duracao.getText());
            expTemp.setDuracao(duracao);
        }else{
            expTemp.setDuracao(0);
        }

        boolean gerente = Checkbox__ExperienciaProfissional__Gerente.isSelected();
        System.out.println("gerente: "+gerente);
        if( gerente == true){
            expTemp.setGerencia("Sim");
        } else {
            expTemp.setGerencia("Não");
        }
        listener.inserirTabelaExperienciaProfissional(expTemp, Table__ExperienciaProfissional);
    }//GEN-LAST:event_Button__ExperienciaProfissional__InserirExperienciaActionPerformed

    private void Button__IndisponibilidadeCandidato__LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button__IndisponibilidadeCandidato__LimparActionPerformed
        listener.preencherTabelaDisponibilidade(false, 0, 2, 1, 7, Table__IndisponibilidadeCandidato);
    }//GEN-LAST:event_Button__IndisponibilidadeCandidato__LimparActionPerformed

    private void Button__IndisponibilidadeCandidato__MarcarTudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button__IndisponibilidadeCandidato__MarcarTudoActionPerformed
        listener.preencherTabelaDisponibilidade(true, 0, 2, 1, 7, Table__IndisponibilidadeCandidato);
    }//GEN-LAST:event_Button__IndisponibilidadeCandidato__MarcarTudoActionPerformed

    private void Button__IndisponibilidadeCandidato__Comercial__SegSexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button__IndisponibilidadeCandidato__Comercial__SegSexActionPerformed
        listener.preencherTabelaDisponibilidade(true,0, 0, 2, 6, Table__IndisponibilidadeCandidato);
        listener.preencherTabelaDisponibilidade(true,1, 1, 2, 6, Table__IndisponibilidadeCandidato);
    }//GEN-LAST:event_Button__IndisponibilidadeCandidato__Comercial__SegSexActionPerformed

    private void delProfissaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delProfissaoActionPerformed
        List<Profissao> lista = List__Profissao__Nome__Selecionados.getSelectedValuesList();
        for(Profissao l : lista){
            dlm2.removeElement(l);
        }
        List__Profissao__Nome__Selecionados.setModel(dlm2);
    }//GEN-LAST:event_delProfissaoActionPerformed

    private void addProfissaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProfissaoActionPerformed
        if(!dlm2.contains(ComboBox__ExperienciaProfissional__CargoExercido__Pesquisa_Profissoes.getSelectedItem())){
            dlm2.addElement(ComboBox__ExperienciaProfissional__CargoExercido__Pesquisa_Profissoes.getSelectedItem());
        }
        List__Profissao__Nome__Selecionados.setModel(dlm2);
    }//GEN-LAST:event_addProfissaoActionPerformed

    private void Field__Candidato__dataNascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Field__Candidato__dataNascimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Field__Candidato__dataNascimentoActionPerformed

    private void Field__CaracteristicasCandidato__CaracteristicasCandidato__PesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Field__CaracteristicasCandidato__CaracteristicasCandidato__PesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Field__CaracteristicasCandidato__CaracteristicasCandidato__PesquisaActionPerformed

    private void Button__IndisponibilidadeCandidato__Semana__NoiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button__IndisponibilidadeCandidato__Semana__NoiteActionPerformed
        listener.preencherTabelaDisponibilidade(true, 2, 2, 2, 6, Table__IndisponibilidadeCandidato);
    }//GEN-LAST:event_Button__IndisponibilidadeCandidato__Semana__NoiteActionPerformed

    private void Button__IndisponibilidadeCandidato__Semana__TardeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button__IndisponibilidadeCandidato__Semana__TardeActionPerformed
        listener.preencherTabelaDisponibilidade(true, 1, 1, 2, 6, Table__IndisponibilidadeCandidato);
    }//GEN-LAST:event_Button__IndisponibilidadeCandidato__Semana__TardeActionPerformed

    private void Button__IndisponibilidadeCandidato__Semana__ManhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button__IndisponibilidadeCandidato__Semana__ManhaActionPerformed
        listener.preencherTabelaDisponibilidade(true, 0, 0, 2, 6, Table__IndisponibilidadeCandidato);
    }//GEN-LAST:event_Button__IndisponibilidadeCandidato__Semana__ManhaActionPerformed

    private void Button__IndisponibilidadeCandidato__Comercial__SabadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button__IndisponibilidadeCandidato__Comercial__SabadoActionPerformed
        listener.preencherTabelaDisponibilidade(true, 0, 0, 2, 7, Table__IndisponibilidadeCandidato);
        listener.preencherTabelaDisponibilidade(true, 1, 1, 2, 6, Table__IndisponibilidadeCandidato);
    }//GEN-LAST:event_Button__IndisponibilidadeCandidato__Comercial__SabadoActionPerformed

    private void Field__Candidato__PreNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Field__Candidato__PreNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Field__Candidato__PreNomeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button__CaracteristicasCandidato__CaracteristicasCandidato__Pesquisa;
    private javax.swing.JButton Button__ExperienciaProfissional__InserirExperiencia;
    private javax.swing.JButton Button__IndisponibilidadeCandidato__Comercial__Sabado;
    private javax.swing.JButton Button__IndisponibilidadeCandidato__Comercial__SegSex;
    private javax.swing.JButton Button__IndisponibilidadeCandidato__Limpar;
    private javax.swing.JButton Button__IndisponibilidadeCandidato__MarcarTudo;
    private javax.swing.JButton Button__IndisponibilidadeCandidato__Semana__Manha;
    private javax.swing.JButton Button__IndisponibilidadeCandidato__Semana__Noite;
    private javax.swing.JButton Button__IndisponibilidadeCandidato__Semana__Tarde;
    private javax.swing.JCheckBox Checkbox__Candidato__Gerencia;
    private javax.swing.JCheckBox Checkbox__ExperienciaProfissional__Gerente;
    private javax.swing.JComboBox ComboBox__ExperienciaProfissional__CargoExercido__Pesquisa;
    private javax.swing.JComboBox ComboBox__ExperienciaProfissional__CargoExercido__Pesquisa_Profissoes;
    private javax.swing.JComboBox Combo__Candidato__CNHCategoria;
    private javax.swing.JComboBox Combo__Candidato__Sexo;
    private javax.swing.JComboBox Combo__Candidato__Veiculo;
    private javax.swing.JComboBox Combo__Candidato__estadoCivil;
    private javax.swing.JTextField Field__Candidato__CPF;
    private javax.swing.JTextField Field__Candidato__PreNome;
    private javax.swing.JTextField Field__Candidato__PretensaoSalarialMax;
    private javax.swing.JTextField Field__Candidato__PretensaoSalarialMin;
    private javax.swing.JCheckBox Field__Candidato__PrimeiroEmprego;
    private javax.swing.JTextField Field__Candidato__RG;
    private javax.swing.JTextField Field__Candidato__SobreNome;
    private javax.swing.JTextField Field__Candidato__dataNascimento;
    private javax.swing.JTextField Field__Candidato__quantidadeFilhos;
    private javax.swing.JTextField Field__CaracteristicasCandidato__CaracteristicasCandidato__Pesquisa;
    private javax.swing.JList Field__CaracteristicasCandidato__CaracteristicasCandidato__Selecionados;
    private javax.swing.JTextField Field__ExperienciaProfissional__Duracao;
    private javax.swing.JButton Filtrar;
    private javax.swing.JList List__CaracteristicasCandidato__Nome__Lista;
    private javax.swing.JList List__Profissao__Nome__Selecionados;
    private javax.swing.JRadioButton Radio__Candidato__DisponibilidadeViajar__Nao;
    private javax.swing.JRadioButton Radio__Candidato__DisponibilidadeViajar__Sim;
    private javax.swing.JRadioButton Radio__Candidato__PortadorNecessidadesEspeciais__Nao;
    private javax.swing.JRadioButton Radio__Candidato__PortadorNecessidadesEspeciais__Sim;
    private javax.swing.JTable Table__CurriculoIdioma;
    private javax.swing.JTable Table__CurriculoInformatica;
    private javax.swing.JTable Table__ExperienciaProfissional;
    private javax.swing.JTable Table__IndisponibilidadeCandidato;
    private javax.swing.JTable Table__ResultadoFiltragem;
    private javax.swing.JButton addCaracteristica;
    private javax.swing.JButton addProfissao;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton delCaracteristica;
    private javax.swing.JButton delProfissao;
    private javax.swing.JButton jBtnLimparTabelaExperienciasProfissionais;
    private javax.swing.JButton jButton4;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPCaracteristicas;
    private javax.swing.JPanel jPDadosPessoais;
    private javax.swing.JPanel jPDisponibilidade;
    private javax.swing.JPanel jPExperienciaProfissional;
    private javax.swing.JPanel jPInformaticaIdiomas;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTPResultado;
    // End of variables declaration//GEN-END:variables
}
